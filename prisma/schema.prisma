// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
    id                      String   @id @default(cuid())
    username                String   @unique
    spotifyId               String?  @unique
    spotifyAccessToken      String?  @unique
    spotifyRefreshToken     String?
    spotifyTokenExpiresAt   DateTime?
    playlists               Playlist[]
    createdAt               DateTime @default(now())
}

model Playlist {
    id                      String   @id //@default(cuid())
    type                    String
    ownerId                 String?
    owner                   Account? @relation(fields: [ownerId], references: [id])
    currentQueueId          String?  @unique
    currentQueue            Queue?   @relation("CurrentQueue",fields: [currentQueueId], references: [id])
    queues                  Queue[]
    createdAt               DateTime @default(now())
}

model YoutubeVideo {
    id              String   @id @default(cuid())
    youtubeId       String
    title           String
    channelTitle    String
    description     String?
    thumbnail       String
    duration        Int
    queueId         String   @unique
    queue           Queue    @relation(fields: [queueId], references: [id])
    createdAt       DateTime @default(now())
}

model SpotifyTrack {
    id              String   @id @default(cuid())
    spotifyUri      String
    title           String
    artist          String
    thumbnail       String
    duration        Int
    queueId         String   @unique
    queue           Queue    @relation(fields: [queueId], references: [id])
    createdAt       DateTime @default(now())
}

model Queue {
    id                  String          @id @default(cuid())
    type                String          @default("youtube-video")
    youtubeVideo        YoutubeVideo?
    spotifyTrack        SpotifyTrack?
    playlist            Playlist        @relation(fields: [playlistId], references: [id])
    playlistId          String
    currentAtPlaylist   Playlist?       @relation("CurrentQueue")
    playedCount         Int             @default(0)
    order               Int?
    createdAt           DateTime        @default(now())
    updateAt            DateTime        @updatedAt

    @@unique([playlistId, order])
}