// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Playlist {
    id              String   @id //@default(cuid())
    type            String
    firstQueueId    String?  @unique
    firstQueue      Queue?   @relation("FirstQueue",fields: [firstQueueId], references: [id])
    currentQueueId  String?  @unique
    currentQueue    Queue?   @relation("CurrentQueue",fields: [currentQueueId], references: [id])
    lastQueueId     String?  @unique
    lastQueue       Queue?   @relation("LastQueue",fields: [lastQueueId], references: [id])
    queues          Queue[]
    createdAt       DateTime @default(now())
}

model YoutubeVideo {
    id              String   @id @default(cuid())
    youtubeId       String
    title           String
    channelTitle    String
    description     String?
    thumbnail       String
    duration        Int
    isCleared       Boolean @default(false)
    totalPlayed     Int     @default(0)
    queues          Queue[]
    createdAt       DateTime @default(now())
}

model Queue {
    id                  String       @id @default(cuid())
    youtubeVideo        YoutubeVideo @relation(fields: [youtubeVideoId], references: [id])
    youtubeVideoId      String
    playlist            Playlist     @relation(fields: [playlistId], references: [id])
    playlistId          String
    firstAtPlaylist     Playlist?    @relation("FirstQueue")
    currentAtPlaylist   Playlist?    @relation("CurrentQueue")
    lastAtPlaylist      Playlist?    @relation("LastQueue")
    playedCount         Int          @default(0)
    nextQueueId         String?      @unique
    nextQueue           Queue?       @relation("NextQueue", fields: [nextQueueId], references: [id])
    prevQueue           Queue?       @relation("NextQueue")
    createdAt           DateTime     @default(now())
    updateAt            DateTime     @updatedAt
}